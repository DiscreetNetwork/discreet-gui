<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <Border Padding="20">
            <!-- Add Controls for Previewer Here -->
        </Border>
    </Design.PreviewWith>

    <Style Selector="Grid.bg-dark, StackPanel.bg-dark">
		<Setter Property="Background" Value="#292929"/>
    </Style>

  <Style Selector="Button.hand">
	  <Setter Property="Cursor" Value="Hand"/>
  </Style>


	<!-- Button Loading Class -->
	<Style Selector="Button.loading Label">
		<Setter Property="IsVisible" Value="False"/>
	</Style>

	<Style Selector="Button Image">
		<Setter Property="IsVisible" Value="False"/>
	</Style>
	<Style Selector="Button.loading Image">
		<Setter Property="IsVisible" Value="True"/>
		<Style.Animations>
			<Animation Duration="0:0:0.800" RepeatCount="INFINITE">
				<KeyFrame Cue="0%">
					<Setter Property="RotateTransform.Angle" Value="0.0"/>
				</KeyFrame>

				<KeyFrame Cue="100%">
					<Setter Property="RotateTransform.Angle" Value="360.0"/>
				</KeyFrame>
			</Animation>
		</Style.Animations>
	</Style>

	<!-- ComboBox style -->
	<Style Selector="ComboBox.dropdown-dark">
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="Foreground" Value="#dddddd"/>
		<Setter Property="Background" Value="#181818"/>
		<Setter Property="CornerRadius" Value="6"/>
	</Style>
	<Style Selector="ComboBox.dropdown-dark:pointerover /template/ Border#Background">
		<Setter Property="Background" Value="#181818"/>
		<Setter Property="BorderBrush" Value="Gray"/>
	</Style>
	<Style Selector="ComboBox.dropdown-dark /template/ Path#DropDownGlyph">
		<Setter Property="Fill" Value="White"/>
	</Style>

	<Style Selector="ComboBox.dropdown-dark ComboBoxItem">
		<Setter Property="Background" Value="#181818"/>
		<Setter Property="Foreground" Value="#dddddd"/>
		<Setter Property="CornerRadius" Value="6"/>
		<Setter Property="Margin" Value="5 3"/>
		<Setter Property="Padding" Value="10"/>
	</Style>
	<Style Selector="ComboBox.dropdown-dark ComboBoxItem:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="#333333"/>
		<Setter Property="TextBlock.Foreground" Value="#dddddd"/>
	</Style>
	<Style Selector="ComboBox.dropdown-dark ComboBoxItem:selected /template/ ContentPresenter">
		<Setter Property="Background" Value="#262626"/>
		<Setter Property="TextBlock.Foreground" Value="#dddddd"/>
	</Style>

  <!-- Button Outline Pink -->
  <Style Selector="Button.btn-outline-pink">
	  <Setter Property="Background" Value="Transparent"/>
	  <Setter Property="Foreground" Value="White"/>
	  <Setter Property="BorderBrush">
		  <SolidColorBrush Color="#D95A86"/>
	  </Setter>
	  <Setter Property="BorderThickness" Value="1, 1, 1, 1"/>
	  <Setter Property="HorizontalContentAlignment" Value="Center"/>
	  <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>
  <Style Selector="Button.btn-outline-pink:pointerover /template/ ContentPresenter">
	  <Setter Property="Background" Value="Transparent"/>
	  <Setter Property="BorderBrush">
		  <SolidColorBrush Color="#DB809E"/>
	  </Setter>
  </Style> 
  <Style Selector="Button.btn-outline-pink:pointerover /template/ ContentPresenter#PART_ContentPresenter">
	  <Setter Property="TextBlock.Foreground" Value="White"/>
  </Style>

  <!-- Button - Light -->
  <Style Selector="Button.btn-light">
    <Setter Property="Foreground" Value="#D35683"/>
    <Setter Property="BorderBrush" Value="{x:Null}"/>
    <Setter Property="Background" Value="White"/>
  </Style>
  <Style Selector="Button.btn-light:pointerover">
    <Setter Property="Foreground" Value="#E7769F"/>
  </Style>
  <!-- Button - Light -->

  <!-- Button - Gray -->
  <Style Selector="Button.btn-gray">
    <Setter Property="Foreground" Value="white"/>
    <Setter Property="Background" Value="#3E3E3E"/>
  </Style>
  <Style Selector="Button.btn-gray:pointerover">
    <Setter Property="Background" Value="#444444"/>
  </Style>
  <!-- Button - Gray -->
  
  <!-- Button - Pink -->
  <Style Selector="Button.btn-pink">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="BorderBrush" Value="{x:Null}"/>
    <Setter Property="Background" Value="#D35683"/>
  </Style>
  <Style Selector="Button.btn-pink:pointerover">
    <Setter Property="Background" Value="#E7769F"/>
  </Style>
  <Style Selector="Button.btn-pink:disabled">
	  <Setter Property="Background" Value="#373737"/>
	  <Setter Property="TextBlock.Foreground" Value="#646464"/>
  </Style>
  <!-- Button - Pink -->
  
  <!-- Button - Outline Gray -->
  <Style Selector="Button.btn-outline-gray">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="BorderBrush">
      <SolidColorBrush Color="White" Opacity="0.3"/>
    </Setter>
    <Setter Property="BorderThickness" Value="1, 1, 1, 1"/>
  </Style>
  <Style Selector="Button.btn-outline-gray:pointerover">
    <Setter Property="BorderBrush">
      <SolidColorBrush Color="White" Opacity="0.5"/>
    </Setter>
  </Style>
  <!-- Button - Outline Gray -->

  <!-- Button - Transparent Pink (Text-only) -->
  <Style Selector="Button.btn-transparent-pink">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Foreground" Value="#D35683"/>
    <Setter Property="BorderBrush" Value="{x:Null}"/>
  </Style>
  <Style Selector="Button.btn-transparent-pink:pointerover">
    <Setter Property="Foreground" Value="#E7769F"/>
  </Style>
  <!-- Button - Transparent Pink (Text-only) -->

	<!-- Button - Transparent (Text-only) -->
	<Style Selector="Button.btn-transparent">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.btn-transparent:pointerover">
		<Setter Property="Foreground" Value="#E7769F"/>
	</Style>
	<!-- Button - Transparent (Text-only) -->

  <Style Selector="Button.btn">
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6">
          <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"/>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  
  <!-- Button - Rounded -->
  <Style Selector="Button.rounded">
    <Setter Property="Template">
      <ControlTemplate>
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="30">
          <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Content="{TemplateBinding Content}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>
  <!-- Button - Rounded -->


  
  <!-- A default TextBox style -->
  <Style Selector="TextBox.input">
    <Setter Property="Foreground" Value="White"/>
  </Style>

  <Style Selector="TextBox.input /template/ Border#PART_BorderElement">
    <Setter Property="BorderBrush" Value="Gray"/>
    <Setter Property="Background" Value="#181818"/>
    <Setter Property="CornerRadius" Value="6"/>
  </Style>

  <Style Selector="TextBox.input /template/ TextPresenter">
    <Setter Property="CaretBrush" Value="White"/>
  </Style>
  <!-- A default TextBox style -->

	
	
  <Style Selector="TextBox.input-gray">
	  <Setter Property="Foreground" Value="White"/>
	  <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>
  <Style Selector="TextBox.input-gray /template/ Border#PART_BorderElement">
    <Setter Property="BorderBrush" Value="#707070"/>
    <Setter Property="Background" Value="#333333"/>
    <Setter Property="CornerRadius" Value="4"/>
	<Setter Property="BorderThickness" Value="1"/>
  </Style>
  <Style Selector="TextBox.input-gray /template/ TextPresenter">
    <Setter Property="CaretBrush" Value="White"/>
  </Style>

  <!-- ALIGMENTS -->
  <Style Selector="Button.align-center">
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>

  


  <Style Selector="Button.align-h-left">
    <Setter Property="HorizontalAlignment" Value="Left"/>
  </Style>
  <Style Selector="Button.align-h-center">
    <Setter Property="HorizontalAlignment" Value="Center"/>
  </Style>
  <Style Selector="Button.align-h-right">
    <Setter Property="HorizontalAlignment" Value="Right"/>
  </Style>

  <Style Selector="Button.align-v-top">
    <Setter Property="VerticalAlignment" Value="Top"/>
  </Style>
  <Style Selector="Button.align-v-center">
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>
  <Style Selector="Button.align-v-bottom">
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>

  <Style Selector="Button.content-center">
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>



  <Style Selector="TextBox.align-h-left">
    <Setter Property="HorizontalAlignment" Value="Left"/>
  </Style>
  <Style Selector="TextBox.align-h-center">
    <Setter Property="HorizontalAlignment" Value="Center"/>
  </Style>
  <Style Selector="TextBox.align-h-right">
    <Setter Property="HorizontalAlignment" Value="Right"/>
  </Style>

  <Style Selector="TextBox.align-v-top">
    <Setter Property="VerticalAlignment" Value="Top"/>
  </Style>
  <Style Selector="TextBox.align-v-center">
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>
  <Style Selector="TextBox.align-v-bottom">
    <Setter Property="VerticalAlignment" Value="Bottom"/>
  </Style>

  <Style Selector="TextBox.content-left">
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>
  
  <!-- ALIGMENTS -->

</Styles>
